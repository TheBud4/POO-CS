@page "/biblioteca/login"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation

<div class="container">
    <h3>Login</h3>  

    <EditForm Model="@loginModel" FormName="login" OnValidSubmit="HandleLogin" class="custom-form">
        <DataAnnotationsValidator/>
        <ValidationSummary class="custom-validation-summary"/>

        <div class="form-group">
            <label for="username">Username:</label>
            <InputText id="username" class="form-control" @bind-Value="loginModel.Username"/>
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password"/>
        </div>

        <button type="submit" class="btn btn-primary">Login</button>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm]
    private LoginModel? loginModel { get; set; }

    protected override void OnInitialized() => loginModel ??= new();
    private Task HandleLogin() {
        bool loginSuccess = true;
        //loginModel?.Username == "admin" && loginModel?.Password == "password"
        
        if (loginSuccess) {
            // Redirecionar ou realizar alguma ação após o login bem-sucedido
            Console.WriteLine("Login bem-sucedido");
            Navigation.NavigateTo("/biblioteca/painel-de-controle");
        } else {
            // Exibir mensagem de erro ou realizar outra ação
            Console.WriteLine("Login falhou");
        }

        return Task.CompletedTask;
    }

    public class LoginModel {
        [Required(ErrorMessage = "O nome de usuário é obrigatório.")]
        public string Username { get; set; } 

        [Required(ErrorMessage = "A senha é obrigatória.")]
        public string Password { get; set; }
    }

}